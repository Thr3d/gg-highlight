#!/bin/bash 
# Filename: gg
# Description: Log filtering and highlighting
# jesse.chandler@suse.com
# Supportconfig/hb_report log filter & highlighter
# Usage: gg [file]
# GREP_COLOR="$COLOR" $search '^.*.*$|$' |\

##TODO remove binary chars on the fly (Nasty bits added when syslog starts sometimes).
#This is the manual way to clean those up.
#cat messages|tr -cd '\11\12\15\40-\176' > messages.new && mv -f messages.new messages
##TODO add bash completion
##TODO add option to enable/disable specific product filtering/highlighting
##TODO testing section for filtering and flag to enable test filtering
##TODO change filter/ignore options/fuctions to be the same word

VERSION=1.2.0

# Coloring
RED='1;37;41'
YELLOW='01;33'
GREEN='01;32'
# Commands
grepsearch='grep -E --text --color=always --line-buffered'
grepfilter='grep --text --line-buffered -Ev'
# Lists/Arrays
redpatterns=("general-red" "ha-red" "sap-red" "caas-red" "hacib-red")
yellowpatterns=("general-yellow" "ha-yellow" "sap-yellow" "supportconfig-yellow" "hacib-yellow")
greenpatterns=("general-green" "ha-green" "hacib-green")
filters=("filter-general" "filter-ha" "filter-caas" "filter-sap" "filter-soc")
experimental=("filter-test" "filter-disk" "filter-systemd")
# Default Booleans
FILTER=false
EXPERIMENTAL=false

function usage()
{
	echo "Usage: gg [OPTION]... [FILE]"
	echo "-i, --ignore 			Enable filtering"
	echo "--version 			Display version"
	echo "-h, --help 			Show this list"
}

function display_version()
{
	echo "gg-highlight version $VERSION"
}

if [ "$1" != "" ]; then
	case $1 in
		-h)
			usage
			exit 1
			;;
		--version)
			display_version
			exit 1
			;;
		-i)
			FILTER=true
			;;
		--experimental)
			EXPERIMENTAL=true
			;;

   esac
fi

# Check for arguments
if [ $# -eq 0 ]; then
    echo "No arguments provided"
    exit 1
fi

# Check if last argument is file
file_arg=$(echo "${@: -1}")
if [[ ! -e $file_arg ]]; then
	echo "$file_arg is not a file. Aborting."
	exit 1
fi

function iterate-redhighlights() {
	greplist=()
	for i in "${redpatterns[@]}"
	do
		if [[ "$i" = *-red ]]
		then
			greplist+=( -f /var/lib/gg-highlight/"${i}".txt)
		else
			cat 
		fi
	done
	GREP_COLOR="$RED" $grepsearch "${greplist[@]}"
}

function iterate-yellowhighlights() {
	greplist=()
	for i in "${yellowpatterns[@]}"
	do
		if [[ "$i" = *-yellow ]]
		then
			greplist+=( -f /var/lib/gg-highlight/"${i}".txt)
		else
			cat 
		fi
	done
	GREP_COLOR="$YELLOW" $grepsearch "${greplist[@]}"
}

function iterate-greenhighlights() {
	greplist=()
	for i in "${greenpatterns[@]}"
	do
		if [[ "$i" = *-green ]]
		then
			greplist+=( -f /var/lib/gg-highlight/"${i}".txt)
		else
			cat 
		fi
	done
	GREP_COLOR="$GREEN" $grepsearch "${greplist[@]}"
}

function iterate-filters() {
	if [[ $FILTER = true ]]; then
		greplist=()
		for i in "${filters[@]}"
		do
			greplist+=(-f /var/lib/gg-highlight/"$i".txt)
		done
		$grepfilter "${greplist[@]}" --
	else
		cat
	fi
}

function iterate-experimental() {
	if [[ $EXPERIMENTAL = true ]]; then
		greplist=()
		for i in "${experiemntal[@]}"
		do
			greplist+=(-f /var/lib/gg-highlight/"$1".txt)
		done
		$grepfilter "${greplist[@]}" --
	else
		cat
	fi
}

function allyourlogsarebelongtome() {
	
	iterate-filters |\
	iterate-experimental |\
	iterate-redhighlights |\
	iterate-yellowhighlights |\
	iterate-greenhighlights
}

cat $file_arg | allyourlogsarebelongtome | less
