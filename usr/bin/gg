#!/bin/bash
# Filename: gg
# Description: Log filtering and highlighting
# jesse.chandler@suse.com
# Supportconfig/hb_report log filter & highlighter
# Usage: gg [file]
# GREP_COLOR="$COLOR" $search '^.*.*$|$' |\

##TODO remove binary chars on the fly (Nasty bits added when syslog starts some times).
#This is the manual way to clean those up.
#cat messages|tr -cd '\11\12\15\40-\176' > messages.new && mv -f messages.new messages
##TODO add bash completion
##TODO add option to enable/disable specific product filtering/highlighting
##TODO testing section for filtering and flag to enable test filtering
##TODO change filter/ignore options/fuctions to be the same word

VERSION=1.1.4

# Coloring
RED='1;37;41'
YELLOW='01;33'
GREEN='01;32'
search='egrep --text --color=always --line-buffered'

##TODO
#Silly way to decide what functions to run. I don't like this and it should be changed.
GENERAL_RED=true
GENERAL_YELLOW=true
GENERAL_GREEN=true
HA_RED=true
HA_YELLOW=true
HA_GREEN=true
HACIB_RED=true
HACIB_YELLOW=true
HACIB_GREEN=true
SAP_RED=true
SAP_YELLOW=true
SAP_GREEN=false
CAAS_RED=true
CAAS_YELLOW=false
CAAS_GREEN=false
SUPPORTCONFIG=true


function usage()
{
	echo "Usage: gg [OPTION]... [FILE]"
	echo "-i, --ignore 			Enable filtering"
	echo "--version 			Display version"
	echo "-h, --help 			Show this list"
}

function display_version()
{
	echo "gg-highlight version $VERSION"
}

if [ "$1" != "" ]; then
	case $1 in
		-h)
			usage
			exit 1
			;;
		--version)
			display_version
			exit 1
			;;
		-i)
			FILTER_GENERAL=true
			FILTER_HA=true
			FILTER_SAP=true
			FILTER_CAAS=true
			FILTER_TEST=false #enable to use test filters
			;;

   esac
fi

# Check for arguments
if [ $# -eq 0 ]; then
    echo "No arguments provided"
    exit 1
fi

# Check if last argument is file
file_arg=$(echo "${@: -1}")
if [[ ! -e $file_arg ]]; then
	echo "$file_arg is not a file. Aborting."
	exit 1
fi

## GENERAL IGNORE ##
function filter-general() {
if [[ $FILTER_GENERAL = true ]]; then
grep --text -Ev -- "\
-- MARK --|\
/usr/sbin/cron\[|\
adcert.* WARN|\
adclient.* INFO|\
attrd: \[.*\]: debug:|\
audit\(.*|\
audit_printk_skb: .* callbacks suppressed|\
auditd\[.*Audit daemon rotating log files|\
automount\[|\
blk_update_request: I/O error, dev fd0, sector 0|\
cimserver\[|\
collectd\[.*\]: Filter subsystem:|\
collectd\[|\
CRON.* \(root\) CMD \(\[ -x /usr/lib64/sa/sa1 \] && exec /usr/lib64/sa/sa1 -S ALL 1 1\)|\
CRON.* pam_unix\(crond:session\): session closed for user|\
cron.* pam_unix\(crond:session\): session closed for user|\
CRON.* pam_unix\(crond:session\): session opened for user|\
cron.* pam_unix\(crond:session\): session opened for user|\
cron.*: \(root\) CMD \(\[ -x /usr/lib64/sa/sa1 \] \&\& exec /usr/lib64/sa/sa1 -S ALL 1 1\)|\
cron\[.*\]: \(root\) CMD \(/usr/bin/salt-daemon-watcher --with-init\)|\
CRON\[.*\]:|\
cron\[.*No such file or directory|\
crontab\[.*\]:|\
cryptctl\[.*: |\
dbus\[.* activated service .org.freedesktop.PackageKit.|\
dbus\[.* Successfully activated service .org.freedesktop.hostname1.|\
dbus\[.* Successfully activated service .org.freedesktop.RealtimeKit1.|\
dbus\[.* Successfully activated service .org.freedesktop.timedate1|\
dd.collector\[|\
dd.dogstatsd\[|\
dd.forwarder\[|\
dhcpcd\[|\
end_request: I/O error, dev fd0, sector 0|\
exportfs\(.*\)\[.*\]: INFO: Directory|\
floppy: error -5 while reading block 0|\
fsaua\[|\
fscachesize: |\
hpfiordo:|\
ifdown: |\
ifup-dhcp:|\
ifup: |\
IIB\[|\
info: Watchdog enabled.|\
kernel: .* generic-usb |\
kernel: .* input: |\
kernel: .* usb .*: Manufacturer|\
kernel: .* usb .*: new low-speed USB|\
kernel: .* usb .*: New USB device found|\
kernel: .* usb .*: New USB device strings|\
kernel: .* usb .*: Product:|\
kernel: .* usb .*: USB disconnect|\
logger: INFO|\
lrmd.*:   notice: executing - rsc:rsc_|\
lrmd.*:   notice: finished - rsc:rsc_|\
lrmd: \[.*\]: debug: .*|\
lrmd: \[.*\]: info: operation monitor.* exited with return code 0|\
no IPv6 routers present|\
omiserver\[.*\]: pam_vas: Authentication <succeeded>|\
PackageKit: daemon|\
PackageKit:|\
packagekitd|\
puma\[|\
puppet-agent\[.*\]: Applied catalog in|\
puppet-agent\[.*|\
rhnsd.* running program /usr/sbin/rhn_check|\
rpc.idmapd\[|\
rpc.mountd\[|\
rsyslogd-3000:|\
rtkit-daemon\[|\
sftp-server\[|\
smartd.*failed to read Temperature|\
snowagent:|\
sntp\[|\
splunk\[.*|\
sshd.* pam_unix\(sshd:session\): session closed for user|\
sshd.* pam_unix\(sshd:session\): session opened for user|\
sshd.* pam_winbind.* granted access|\
sshd.* subsystem request for sftp|\
sshd.*: Accepted password|\
sshd.*: Accepted publickey for|\
sshd\[.*\]: Starting session: command for .* from .* port .* id .*|\
sshd\[.*\]: Close session: user .* from .* port .* id .*|\
sshd.*: Connection closed by|\
sshd.*: Connection reset by|\
sshd.*: Did not receive identification string from|\
sshd.*: Disconnected|\
sshd.*: Failed password|\
sshd.*: Received disconnect from|\
sshd.*Accepted keyboard-interactive|\
sshd.*error: PAM: Authentication failure for|\
sshd.*pam_lastlog|\
sshd.*pam_unix\(sshd:auth\): authentication failure|\
sshd\[.* Closing connection|\
sshd\[.* Connection from|\
sshd\[.* Failed keyboard-interactive/pam for invalid user|\
sshd\[.* input_userauth_request: invalid user|\
sshd\[.* Invalid user .* from |\
sshd\[.* Postponed keyboard-interactive for invalid user .* from .* port |\
sshd\[.* Postponed keyboard-interactive for|\
sshd\[.* Postponed keyboard-interactive|\
sshd\[.* Postponed publickey for|\
sshd\[.* Set /proc/self/oom_score_adj to 0|\
sshd\[.* Starting session|\
sshd\[.* Transfered:|\
sshd\[.* User child is on|\
sshd\[.*: error: PAM: User not known to the underlying authentication module for|\
su: \(to|\
su: FAILED SU|\
su: pam_unix.* session closed for user|\
su: pam_unix.* session opened for user|\
su\[.*\]: |\
sudo.*pam_vas:|\
sudo: |\
SuSEfirewall2: SuSEfirewall2 not active|\
syslog-ng.*Log statistics|\
syslog-ng\[.*\]: Connection failed\; error=.Connection refused.|\
syslog-ng\[.*\]: I/O error occurred while writing; fd='16', error='Connection refused \(111\)|syslog-ng\[.*\]: Connection broken; time_reopen='60'|\
SYSTEMCHECK: |\
systemd-logind.* New session .* of user|\
systemd-logind.*: Removed session|\
systemd.*: Created slice User Slice of .*.|\
systemd.*: Reached target Basic System.|\
systemd.*: Reached target Default.|\
systemd.*: Reached target Paths.|\
systemd.*: Reached target Paths.|\
systemd.*: Reached target Shutdown.|\
systemd.*: Reached target Sockets.|\
systemd.*: Reached target Timers.|\
systemd.*: Received SIGRTMIN+24 from PID .* \(kill\).|\
systemd.*: Removed slice User Slice of .*.|\
systemd.*: Started User Manager for UID .*.|\
systemd.*: Starting Exit the Session...|\
systemd.*: Starting User Manager for UID .*...|\
systemd.*: Startup finished in .*.|\
systemd.*: Stopped target Basic System.|\
systemd.*: Stopped target Default.|\
systemd.*: Stopped target Paths.|\
systemd.*: Stopped target Sockets.|\
systemd.*: Stopped target Timers.|\
systemd.*: Stopped User Manager for UID .*.|\
systemd.*: Stopping User Manager for UID .*...|\
systemd: pam_unix\(systemd-user:session\): session closed for user .*|\
systemd: pam_unix\(systemd-user:session\): session opened for user .*|\
systemd\[1\]: Started Session|\
systemd\[1\]: Starting Session|\
useradd\[|\
userdel\[|\
vsftpd:|\
xinetd|\
zzzzz-last_line-zzzzz"
else 
	cat
fi
}

### END ## GENERAL IGNORE ###

## CaaS Ignore ##
function filter-caas() {
if [[ $FILTER_CAAS = true ]]; then
grep --text -Ev -- "\
hyperkube\[.*\]: I.* container_manager_linux.go:398\] \[ContainerManager\]: Discovered runtime cgroups name: /system.slice/docker.service|\
hyperkube\[.*\]: I.* kubelet_node_status.go:247\] Setting node annotation to enable volume controller attach/detach|\
hyperkube\[.*\]: I.* kubelet_node_status.go:247\] Setting node annotation to enable volume controller attach/detach|\
hyperkube\[.*\]: I.* kubelet_node_status.go:410\] Recording NodeHasNoDiskPressure event message for node 127.0.0.1|\
hyperkube\[.*\]: I.* kubelet_node_status.go:410\] Recording NodeHasSufficientDisk event message for node 127.0.0.1|\
hyperkube\[.*\]: I.* kubelet_node_status.go:410\] Recording NodeHasSufficientMemory event message for node 127.0.0.1|\
hyperkube\[.*\]: I.* qos_container_manager_linux.go:286\] \[ContainerManager\]: Updated QoS cgroup configuration|\
salt-minion\[.*\]: \[WARNING \] Unable to find IPv6 record for ".*" causing a 10 second timeout when rendering grains. Set the dns or /etc/hosts for IPv6 to clear this.|\
systemd\[.*\]: Received SIGRTMIN\+24 from PID .* \(kill\)|\
zzzzz-last_line-zzzzz"
else 
	cat
fi
}

### END CaaS Ignore ###

## HA Ignore ##
function filter-ha() {
if [[ $FILTER_HA = true ]]; then
grep --text -Ev -- "\
attrd_updater\[.*notice: crm_log_args: Invoked: attrd_updater|\
cib: \[.*\]: debug:|\
cib\[.*\]:   notice: cib:diff:|\
cib\[.*\]:   notice: log_cib_diff: cib:diff:|\
corosync\[.*\]:   \[CONFDB\] exit_fn for conn=|\
corosync\[.*\]:   \[CONFDB\] lib_init_fn: conn=|\
corosync\[.*\]:   \[CPG   \] cpg finalize for conn=|\
corosync\[.*\]:   \[CPG   \] exit_fn for conn=|\
corosync\[.*\]:   \[CPG   \] lib_init_fn: conn=.*, cpd=|\
corosync\[.*\]:   \[IPC   \] IPC credentials for client pid .*: uid 0. gid 0|\
corosync\[.*\]:   \[pcmk  \] debug: process_ais_message: Msg\[1\] \(dest=local:ais, from=.*:.*, remote=true, size=.*\)|\
corosync\[.*\]:   \[QUORUM\] got quorate request on |\
corosync\[.*\]:   \[QUORUM\] got trackstart request on |\
corosync\[.*\]:   \[QUORUM\] lib_exit_fn: conn=|\
corosync\[.*\]:   \[QUORUM\] lib_init_fn: conn=|\
corosync\[.*\]:   \[QUORUM\] sending initial status to |\
corosync\[.*\]:   \[QUORUM\] sending quorum notification to .*, length = .*|\
crm_attribute\[.*notice: crm_log_args: Invoked:|\
crmd.* notice: Processing graph|\
crmd.* notice: Transition.*Complete$|\
crmd.*:   notice: Result of notify operation for rsc_|\
crmd.*notice: State transition S_IDLE -> S_POLICY_ENGINE|\
crmd.*notice: State transition S_TRANSITION_ENGINE -> S_IDLE|\
crmd: \[.*\]: debug:|\
crmd\[.* notice: do_state_transition: State transition S_IDLE -> S_POLICY_ENGINE|\
crmd\[.* notice: do_state_transition: State transition S_TRANSITION_ENGINE -> S_IDLE|\
crmd\[.* notice: do_te_invoke: Processing graph|\
crmd\[.* notice: run_graph: Transition|\
pengine: \[.*\]: debug:|\
pengine\[.* notice: unpack_config: On loss of CCM Quorum: Ignore|\
pengine\[.*:   notice: Calculated Transition.*.bz2$|\
pengine\[.*:   notice: On loss of CCM Quorum: Ignore|\
pengine\[.*:   notice: Relying on watchdog integration for fencing|\
pengine\[.*notice: process_pe_message: Calculated Transition|\
sbd: \[.*\]: info: Monitoring Pacemaker health|\
stonith-ng: \[.*\]: debug:|\
stonith-ng\[.*notice: unpack_config: On loss of CCM Quorum: Ignore|\
zzzzz-last_line-zzzzz"
else 
	cat
fi
}

### END HA Ignore ###

## SAP Ignore ##
function filter-sap() {
if [[ $FILTER_SAP = true ]]; then
grep --text -Ev -- "\
HDB\[|\
HDB_SYSTEMDB\[|\
SAPFPA_00|\
SAPHana\(.*\)\[.*\]: DEBUG:|\
SAPHana\(.*\)\[.*\]: INFO: ACT site=.*, seting SOK for secondary \(1\)|\
SAPHana\(.*\)\[.*\]: INFO: DEC analyze_hana_sync_statusSRS systemReplicationStatus.py \(to site '.*'\)-> 15|\
SAPHana\(.*\)\[.*\]: INFO: DEC: secondary with sync status SOK ==> possible takeover node|\
SAPHana\(.*\)\[.*\]: INFO: RA ==== begin action monitor_clone \(.*\) ====|\
SAPHana\(.*\)\[.*\]: INFO: RA ==== end action monitor_clone with rc=0 \(.*\) \(.*s\)====|\
SAPHana\(.*\)\[.*\]: INFO: RA ==== end action monitor_clone with rc=8 \(.*\) \(.*s\)====|\
SAPHanaTopology\(.*\)\[.*\]: DEBUG:|\
SAPHanaTopology\(.*\)\[.*\]: INFO: DEC: site=.*, mode=primary, MAPPING=.*, hanaRemoteHost=.*|\
SAPHanaTopology\(.*\)\[.*\]: INFO: DEC: site=.*, mode=sync, MAPPING=.*, hanaRemoteHost=.*|\
SAPHanaTopology\(.*\)\[.*\]: INFO: RA ==== begin action monitor_clone \(.*\) ====|\
SAPHanaTopology\(.*\)\[.*\]: INFO: RA ==== end action monitor_clone with rc=0 \(.*\) \(.*s\)====|\
SAPRP1_00|\
sapuxuserchk\[.*\]: pam_vas: Authentication .succeeded. for .Active Directory.|\
zzzzz-last_line-zzzzz"
else 
	cat
fi
}

### END SAP Ignore ###

## TEST Ignore ##
function filter-test() {
if [[ $FILTER_TEST = true ]]; then
grep --text -Ev -- "\
hpasmlited\[.*\]: KCS CHIF: Expected Cmd .*, Msg ID .*|\
hpasmlited\[.*\]: KCS CHIF: Received Cmd .*, Msg ID .*|\
SAPHanaSR-mon\[.* All checks passed -|\
SAPHanaSR-mon\[.* Monitor startup|\
SESSION = .* CMD =$|\
smartd\[.*\]:|\
zzzzz-last_line-zzzzz"
else 
	cat
fi
}

### END TEST Ignore ###

## General ##
#RED
function general-red() {
if [[ $GENERAL_RED = true ]]; then
GREP_COLOR="$RED" $search "(\
^.*A processor.*$|$|\
^.*Aborting journal.*$|$|\
^.*attrd\[.*\]:    error:.*$|$|\
^.*BTRFS error.*$|$|\
^.*BTRFS info \(device .*\): forced readonly.*$|$|\
^.*BUG:.*$|$|\
^.*Cancelling IO request due to timeout.*$|$|\
^.*Detected aborted journal.*$|$|\
^.*Detected IO errors while flushing file data on.*$|$|\
^.*device-mapper: multipath: Failing path.*$|$|\
^.*error: remounting filesystem read-only.*$|$|\
^.*Executing suicide fencing.*$|$|\
^.*FAILED.*$|$|\
^.*fatal.*$|$|\
^.*I/O error.*$|$|\
^.*init: Entering runlevel:.*$|$|\
^.*init: Switching to runlevel:.*$|$|\
^.*IO failure.*$|$|\
^.*kernel taint.*$|$|\
^.*kernel.* sd .* FAILED Result.*$|$|\
^.*kernel.* sd .* killing request.*$|$|\
^.*kernel: \[.*\] Call Trace:.*$|$|\
^.*kernel: \[.*\] Killed process .* \(.*\) total-vm:.*$|$|\
^.*kernel: \[.*\] Out of memory: Kill process .* \(.*\) score .* or sacrifice child.*$|$|\
^.*klogd.*started.*$|$|\
^.*Link Down Event.*$|$|\
^.*lost page write due to IO error.*$|$|\
^.*multipathd:.* - tur checker reports path is down.*$|$|\
^.*multipathd:.*mark as failed.*$|$|\
^.*No free memory.*$|$|\
^.*NO_MEMORY.*$|$|\
^.*NT_STATUS_ACCESS_DENIED.*$|$|\
^.*oom-killer.*$|$|\
^.*Oops:.*$|$|\
^.*out of memory.*$|$|\
^.*OutOfMemoryError.*$|$|\
^.*pengine.*:    error:.*$|$|\
^.*quorum lost.*$|$|\
^.*Readonly filesystem.*$|$|\
^.*rejecting I/O.*$|$|\
^.*Requesting peer fencing.*$|$|\
^.*reset successfully delivered to.*$|$|\
^.*rsyslogd: \[origin software=\"rsyslogd\" swVersion=\".*\" x-pid=\".*\" x-info=\"http://www.rsyslog.com\"\] exiting on signal 15.*$|$|\
^.*rsyslogd: \[origin software=\"rsyslogd\" swVersion=\".*\" x-pid=\".*\" x-info=\"http://www.rsyslog.com\"\] start.*$|$|\
^.*segfault.*$|$|\
^.*SFAIL.*$|$|\
^.*shutdown.*: shutting down for system reboot.*$|$|\
^.*syslog-ng starting up.*$|$|\
^.*syslog-ng.*: syslog-ng shutting down; version=.*$|$|\
^.*syslog-ng.*: Termination requested via signal, terminating.*$|$|\
^.*syslogd.*restart.*$|$|\
^.*sysrq: SysRq : sysrq: Trigger a crash.*$|$|\
^.*systemd-logind\[.*\]: Power key pressed..*$|$|\
^.*systemd-logind\[.*\]: System is powering down.*$|$|\
^.*tainting kernel.*$|$|\
^.*taints kernel.*$|$|\
^.*timed out after.*$|$|\
^.*warning: update_failcount:.*$|$|\
^.*Writing reset to node.*$|$|\
^.*x-info="http://www.rsyslog.com"\] exiting on signal 15..*$|$|\
^.*x-info="http://www.rsyslog.com"\] start.*$|$|\
^.*XFS.*: Log I/O Error Detected.  Shutting down filesystem.*$|$|\
^.*systemd\[1\]: systemd .* running in system mode..*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#YELLOW
function general-yellow() {
if [[ $GENERAL_YELLOW = true ]]; then
GREP_COLOR="$YELLOW" $search "(\
^.*Bad protocol version.*$|$|\
^.*blocked FC remote port time out.*$|$|\
^.*BTRFS warning.*$|$|\
^.*corosync.*Incrementing problem counter.*$|$|\
^.*corosync\[.*\]:  \[TOTEM \] Retransmit List.*$|$|\
^.*Couldn.t find device with.*$|$|\
^.*crmd\[.*\]:   notice: do_state_transition: State transition S_ELECTION -> S_INTEGRATION \[ input=I_ELECTION_DC cause=C_TIMER_POPPED origin=election_timeout_popped \].*$|$|\
^.*crmd\[.*\]:   notice: terminate_cs_connection: Disconnecting from Corosync.*$|$|\
^.*Delaying fencing operations until there are resources to manage.*$|$|\
^.*device-mapper: .*error.*$|$|\
^.*Error.*$|$|\
^.*ERROR:.*$|$|\
^.*failed.*$|$|\
^.*kernel.* reservation conflict.*$|$|\
^.*mcelog:.*$|$|\
^.*Protocol major versions differ.*$|$|\
^.*recoverable transport error.*$|$|\
^.*smartd.*: .* SMART Usage Attribute.*$|$|\
^.*tur checker timed out.*$|$|\
^.*unhandled error.*$|$|\
^.*warning:.*$|$|\
^.*WARNING:.*$|$|\
^.*xfs_log_force: error.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

# GREEN
function general-green() {
if [[ $GENERAL_GREEN = true ]]; then
GREP_COLOR="$GREEN" $search "(\
 Verification Status: Passed|\
^.*multipathd.*reinstated.*$|$|\
^.*SuSEfirewall2 not active.*$|$|\
^.*tur checker reports path is up.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END GENERAL ###

## HA ##
#RED
function ha-red() {
if [[ $HA_RED = true ]]; then
GREP_COLOR="$RED" $search "(\
^.*cib\[.*\]:   notice: Disconnecting from Corosync.*$|$|\
^.*CLM CONFIGURATION CHANGE.*$|$|\
^.*cluster-dlm\[.*\]: fence_node_time:.*$|$|\
^.*corosync\[.*\]:   \[TOTEM \] Failed to receive the leave message. failed:.*$|$|\
^.*corosync\[.*\]:  \[pcmk  \] notice: pcmk_shutdown: Shuting down Pacemaker.*$|$|\
^.*corosync\[.*\]:  \[SERV  \] Unloading all Corosync service engines.*$|$|\
^.*crit:.*$|$|\
^.*crmd\[.*\]:    error: crmd_fast_exit: Could not recover from internal error.*$|$|\
^.*crmd\[.*\]:    error:.*$|$|\
^.*crmd\[.*\]:   notice: abort_transition_graph: Transition aborted: Stonith failed.*$|$|\
^.*crmd\[.*\]:   notice: tengine_stonith_callback: Stonith operation .* for .* failed (No route to host): aborting transition..*$|$|\
^.*crmd\[.*\]:   notice: tengine_stonith_callback: Stonith operation .*: No route to host.*$|$|\
^.*crmd\[.*\]:  warning: Another DC detected:.*$|$|\
^.*crmd\[.*\]:  warning: reap_dead_nodes: Our DC node \(.*\) left the cluster.*$|$|\
^.*crmd\[.*\]:.*Cant retrieve the CIB.*$|$|\
^.*crmd\[.*\]:.*I_ERROR.*$|$|\
^.*crmd\[.*\]:.*I_TERMINATE.*$|$|\
^.*crmd\[.*\]:.*notice: throttle_handle_load:  High CPU load detected:.*$|$|\
^.*crmd\[.*\]:.*notice: throttle_mode: High CIB load detected:.*$|$|\
^.*crmd\[.*\]:.*Our peer on the DC \(.*\) is dead.*$|$|\
^.*crmd\[.*\]:.*warning: do_recover: Fast-tracking shutdown in response to errors.*$|$|\
^.*external/vcenter\(.*\)\[.*\]: \[.*\]: ERROR:.*$|$|\
^.*pengine\[.*\]:  warning: determine_online_status: Node .* is unclean.*$|$|\
^.*pengine\[.*\]:  warning: pe_fence_node: Node .* will be fenced because the node is no longer part of the cluster.*$|$|\
^.*sbd.* ERROR:.*$|$|\
^.*sbd.* WARN:.*$|$|\
^.*Scheduling Node .* for shutdown$|$|\
^.*Scheduling Node .* for STONITH.*$|$|\
^.*Scheduling Node .* for STONITH.*$|$|\
^.*stonith-ng.* wants to fence.*$|$|\
^.*stonith-ng\[.*\]:    error: remote_op_done: Operation reboot of .* by .* for .*: No route to host.*$|$|\
^.*stonith-ng\[.*\]:   notice: stonith_choose_peer: Couldn't find anyone to fence.*$|$|\
^.*stonith-ng\[.*\]:  warning: log_action: fence_legacy\[.*\] stderr:.*$|$|\
^.*stonith: external_reset_req: 'vcenter reset' for host .* failed with rc.*$|$|\
^.*warning: Could not verify cluster configuration file /var/lib/pacemaker/cib/cib.xml: No such file or directory.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#YELLOW
function ha-yellow() {
if [[ $HA_YELLOW = true ]]; then
GREP_COLOR="$YELLOW" $search "(\
^.*Executing reboot fencing operation .* on.*$|$|\
^.*I_ELECTION_DC.*$|$|\
^.*I_NOT_DC.*$|$|\
^.*info: We don.t have a DC right now..*$|$|\
^.*lrmd\[.*\]:   notice: .*:stderr \[ umount: .* target is busy \].*$|$|\
^.*notice: Removing.*from the membership list.*$|$|\
^.*Quorum lost.*$|$|\
^.*S_ELECTION.*$|$|\
^.*sbd_stonith can fence.*$|$|\
^.*state is now lost.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#GREEN
function ha-green() {
if [[ $HA_GREEN = true ]]; then
GREP_COLOR="$GREEN" $search "(\
   Active: active|\
^.*A new membership .* was formed..*$|$|\
^.*Completed service synchronization, ready to provide service.*$|$|\
^.*corosync.*Decrementing problem counter.*$|$|\
^.*crmd\[.*\]:   notice: crm_update_quorum: Updating quorum status to true.*$|$|\
^.*crmd\[.*\]:   notice: Result of start operation for .* on .*: 0 \(ok\).*$|$|\
^.*crmd\[.*\]:   notice: Result of stop operation for .* on .*: 0 \(ok\).*$|$|\
^.*Filesystem\(.*\)\[.*\]: INFO: unmounted .* successfully.*$|$|\
^.*info: Node state: online.*$|$|\
^.*info: Pacemaker health check: OK.*$|$|\
^.*is now: member.*$|$|\
^.*notice: Quorum acquired.*$|$|\
^.*quorum acquired.*$|$|\
^.*sbd: \[.*\]: info: CIB reconnect successful.*$|$|\
^.*Servant starting for device.*$|$|\
^.*state is now member.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END HA ###

## HA CIB ##
#GREEN
function hacib-green {
if [[ $HACIB_GREEN = true ]]; then
GREP_COLOR="$GREEN" $search "(\
<clone |\
<cluster_property_set |\
<colocation |\
<group |\
<location |\
<master |\
<node |\
<order |\
<primitive |\
<property |\
<rsc_colocation |\
<rsc_defaults>|\
<rsc_location |\
<rsc_order |\
^clone |\
^colocation |\
^group |\
^location |\
^ms |\
^node |\
^op_defaults |\
^order |\
^primitive |\
^property |\
^rsc_defaults |\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#YELLOW
function hacib-yellow {
if [[ $HACIB_YELLOW = true ]]; then
GREP_COLOR="$YELLOW" $search "(\
maintenance\=on|\
name=\"maintenance\" value=\"true\"|\
standby\=on|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#RED
function hacib-red {
if [[ $HACIB_RED = true ]]; then
GREP_COLOR="$RED" $search "(\
\*\*\* Resource management is DISABLED \*\*\*|\
have-watchdog\=false|\
name=\"maintenance-mode\" value=\"true\"|\
name=\"stonith-enabled\" value=\"false\"|\
stonith-enabled\=false|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END HA CIB ###

## SAP ##
#RED
function sap-red() {
if [[ $SAP_RED = true ]]; then
GREP_COLOR="$RED" $search "(\
^.*PreferSiteTakeover selected so decrease promotion score here.*$|$|\
^.*Promote .* to be primary.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

#YELLOW
function sap-yellow() {
if [[ $SAP_YELLOW = true ]]; then
GREP_COLOR="$YELLOW" $search "(\
^.*SAPHana\(.*\)\[.*\]: INFO: ACT: Demoted.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END SAP ###

## CaaS ##
#RED
function caas-red() {
if [[ $CAAS_RED = true ]]; then
GREP_COLOR="$RED" $search "(\
^.*hyperkube\[.*\]: I.* kubelet.go:1820] skipping pod synchronization - \[.* is not healthy:.*$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END CaaS ###

## Supportconfig Junk ##
function supportconfig() {
if [[ $SUPPORTCONFIG = true ]]; then
GREP_COLOR="$YELLOW" $search "(\
^===========================.*$|$ |\
^#==\[ .* \].*=====================#$|$|\
^zzzzz-last_line-zzzzz$|$)"
else 
	cat
fi
}

### END Supportconfig Junk ###

function allyourlogsarebelongtome() {
	filter-general |\
	filter-caas	|\
	filter-ha |\
	filter-sap |\
	filter-test |\
	general-red |\
	general-yellow |\
	general-green |\
	ha-red |\
	ha-yellow |\
	ha-green |\
	hacib-red |\
	hacib-yellow |\
	hacib-green |\
	sap-red |\
	sap-yellow |\
	caas-red |\
	supportconfig
}

cat $file_arg | allyourlogsarebelongtome | less
